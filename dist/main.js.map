{"version":3,"sources":["webpack:///./src/util.js","webpack:///./src/moving_object.js","webpack:///./src/bullet.js","webpack:///./src/ship.js","webpack:///./src/cell.js","webpack:///./src/corona.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js"],"names":["ChildClass","ParentClass","prototype","Object","create","constructor","length","deg","Math","PI","random","cos","sin","wrap","cord","max","pos1","pos2","x","abs","y","sqrt","MovingObject","options","this","pos","radius","color","speed","direction","game","ctx","fillStyle","beginPath","arc","fill","closePath","delta","outOfBound","wrappable","remove","other","Bullet","ship","face","shipPos","super","Ship","drawImage","image","bullet","addBullet","img","Image","src","Cell","Corona","bounce","obj1","obj2","d1","d2","p1","p2","vCollision","distance","pow","vCollisionNorm","Game","coronaCount","cellCount","lives","mode","coronas","cells","over","bullets","setTimeout","addCoronas","addCells","i","corona","push","cell","forEach","floor","DIM_X","DIM_Y","clearRect","BG_COLOR","fillRect","grd","createRadialGradient","createLinearGradient","addColorStop","allObjects","el","draw","move","object","index","indexOf","splice","relocate","concat","all","j","isCollidingWith","collide","moveObjects","checkCollisions","power","fireBullet","FPS","GameView","startGame","startDialog","intro","$","on","$info","append","instruction","createDialog","parseInt","val","difficulty","find","attr","countdown","bindKeyHandlers","lastTime","children","$buttons","difficultyButtons","document","e","removeClass","target","id","event","addClass","updateSpeed","updateStats","requestAnimationFrame","animate","bind","seconds","$number","text","counter","setInterval","clearInterval","step","time","gameOver","k","keys","MOVES","key","isPressed","moveShip","titleText","instructionText","buttonText","$dialog","$title","$inputs","$coronaDiv","$coronaText","$coronaNum","$cellDiv","$cellText","$cellNum","$button","location","selected","$container","$text","$easy","$normal","$hard","fire","w","a","s","d","console","log","window","addEventListener","canvasEl","getElementsByTagName","height","width","getContext"],"mappings":"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","file":"main.js","sourcesContent":["const Util = {\r\n  inherits(ChildClass, ParentClass) {\r\n    ChildClass.prototype = Object.create(ParentClass.prototype);\r\n    ChildClass.constructor = ChildClass;\r\n  },\r\n\r\n  randomVec(length) {\r\n    //angle between 0 & 180\r\n    const deg = 2 * Math.PI * Math.random();\r\n    //get x & y value of degree\r\n    const x = Math.cos(deg);\r\n    const y = Math.sin(deg);\r\n    return [x, y];\r\n  },\r\n\r\n  wrap(cord, max) {\r\n    if (cord > max) {\r\n      return cord % max;\r\n    } else if (cord < 0) {\r\n      return max - (cord % max);\r\n    } else {\r\n      return cord;\r\n    }\r\n  },\r\n\r\n  dist(pos1, pos2) {\r\n    const x = Math.abs(pos1[0] - pos2[0]);\r\n    const y = Math.abs(pos1[1] - pos2[1]);\r\n    return Math.sqrt(x * x + y * y);\r\n  },\r\n};\r\n\r\nexport default Util;\r\n","import Util from \"./util\";\r\n\r\nclass MovingObject {\r\n  constructor(options) {\r\n    this.pos = options.pos;\r\n    this.radius = options.radius;\r\n    this.color = options.color;\r\n    this.speed = options.speed;\r\n    this.direction = options.direction;\r\n    this.game = options.game;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  move(delta) {\r\n    delta = delta / 10 || 1;\r\n    const x = this.pos[0] + this.direction[0] * this.speed * delta;\r\n    const y = this.pos[1] + this.direction[1] * this.speed * delta;\r\n    this.pos = [x, y];\r\n    if (this.game.outOfBound(this.pos, this.radius)) {\r\n      if (this.wrappable) {\r\n        this.pos = this.game.wrap([x, y]);\r\n      } else {\r\n        this.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  isCollidingWith(other) {\r\n    return Util.dist(this.pos, other.pos) < this.radius + other.radius;\r\n  }\r\n\r\n  remove() {\r\n    this.game.remove(this);\r\n  }\r\n\r\n  collide(other) {}\r\n}\r\n\r\nMovingObject.prototype.wrappable = true;\r\n\r\nexport default MovingObject;\r\n","import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\n\nconst DEFAULTS = {\n  RADIUS: 3,\n  COLOR: \"#00c1d1\",\n  SPEED: 6,\n};\n\nclass Bullet extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = [...options.game.ship.face];\n    const shipPos = options.game.ship.pos;\n    options.pos = [\n      shipPos[0] + options.direction[0] * 10,\n      shipPos[1] + options.direction[1] * 10,\n    ];\n    super(options);\n  }\n}\n\nBullet.prototype.wrappable = false;\n\nexport default Bullet;\n","import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  RADIUS: 20,\n  COLOR: \"white\",\n  SPEED: 1.5,\n};\n\nclass Ship extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = options.color || DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.pos = options.pos || [600, 400];\n    options.direction = options.direction || [0, 0];\n    super(options);\n    this.face = [1, 0];\n  }\n\n  relocate() {\n    this.pos = Game.randomPos();\n  }\n\n  power(direction) {\n    this.direction[0] = direction[0] * DEFAULTS.SPEED;\n    this.direction[1] = direction[1] * DEFAULTS.SPEED;\n    if (direction[0] != 0 || direction[1] != 0) this.face = direction;\n  }\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Ship.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n  fireBullet() {\n    // if (this.direction[0] === 0 && this.direction[1] === 0) return;\n    const bullet = new Bullet({ game: this.game });\n    this.game.addBullet(bullet);\n  }\n}\nconst img = new Image();\nimg.src = \"./assets/ship.png\";\nShip.image = img;\nexport default Ship;\n","import MovingObject from \"./moving_object\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Ship from \"./ship.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  COLOR: \"#5cdb94\",\n  RADIUS: 25,\n  SPEED: 1,\n};\n\nclass Cell extends MovingObject {\n  constructor(options = {}) {\n    options.speed = options.speed || DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = options.direction || Util.randomVec();\n    options.pos = options.pos || Game.randomPos();\n    super(options);\n    this.speed = this.speed || 1;\n  }\n\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Cell.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n}\nconst img = new Image();\nimg.src = `./assets/cell3.png`;\nCell.image = img;\n\nexport default Cell;\n","import MovingObject from \"./moving_object\";\r\nimport Util from \"./util\";\r\nimport Game from \"./game.js\";\r\nimport Ship from \"./ship.js\";\r\nimport Bullet from \"./bullet.js\";\r\nimport Cell from \"./cell.js\";\r\n\r\nconst DEFAULTS = {\r\n  COLOR: \"#c90579\",\r\n  RADIUS: 25,\r\n  SPEED: 1,\r\n};\r\n\r\nclass Corona extends MovingObject {\r\n  constructor(options = {}) {\r\n    options.speed = options.speed || DEFAULTS.SPEED;\r\n    options.color = DEFAULTS.COLOR;\r\n    options.radius = DEFAULTS.RADIUS;\r\n    options.direction = options.direction || Util.randomVec();\r\n    options.pos = options.pos || Game.randomPos();\r\n    super(options);\r\n  }\r\n\r\n  draw(ctx) {\r\n    const pos = this.pos;\r\n    ctx.drawImage(Corona.image, pos[0] - 25, pos[1] - 25, 50, 50);\r\n  }\r\n\r\n  collide(other) {\r\n    if (other instanceof Corona) {\r\n      this.bounce(this, other);\r\n    }\r\n    if (other instanceof Cell) {\r\n      other.remove();\r\n    }\r\n    if (other instanceof Ship) {\r\n      other.remove();\r\n    }\r\n    if (other instanceof Bullet) {\r\n      this.remove();\r\n    }\r\n  }\r\n  bounce(obj1, obj2) {\r\n    let [d1, d2] = [obj1.direction, obj2.direction];\r\n    let [p1, p2] = [obj1.pos, obj2.pos];\r\n\r\n    let vCollision = { x: p2[0] - p1[0], y: p2[1] - p1[1] };\r\n\r\n    let distance = Math.sqrt(\r\n      Math.pow(obj2.pos[0] - obj1.pos[0], 2) +\r\n        Math.pow(obj2.pos[1] - obj1.pos[1], 2)\r\n    );\r\n\r\n    let vCollisionNorm = {\r\n      x: vCollision.x / distance,\r\n      y: vCollision.y / distance,\r\n    };\r\n\r\n    let vRelativeVelocity = { x: d1[0] - d2[0], y: d1[1] - d2[1] };\r\n\r\n    let speed =\r\n      vRelativeVelocity.x * vCollisionNorm.x +\r\n      vRelativeVelocity.y * vCollisionNorm.y;\r\n\r\n    if (speed < 0) {\r\n      return;\r\n    }\r\n\r\n    obj1.direction[0] -= speed * vCollisionNorm.x;\r\n    obj1.direction[1] -= speed * vCollisionNorm.y;\r\n    obj2.direction[0] += speed * vCollisionNorm.x;\r\n    obj2.direction[1] += speed * vCollisionNorm.y;\r\n  }\r\n}\r\n\r\nconst img = new Image();\r\nimg.src = \"./assets/virus.png\";\r\nCorona.image = img;\r\n\r\nexport default Corona;\r\n","import Corona from \"./corona\";\nimport Ship from \"./ship\";\nimport Bullet from \"./bullet\";\nimport Util from \"./util\";\nimport Cell from \"./cell\";\n\nclass Game {\n  constructor(coronaCount = 3, cellCount = 10, speed = 1, lives = 3, mode) {\n    this.coronas = [];\n    this.cells = [];\n    this.coronaCount = coronaCount;\n    this.cellCount = cellCount;\n    this.speed = speed;\n    this.over = false;\n    this.bullets = [];\n    this.lives = lives;\n\n    this.ship = new Ship({ game: this });\n    const time = mode === \"preview\" ? 0 : 4000;\n    setTimeout(() => {\n      this.addCoronas();\n      this.addCells();\n    }, time);\n  }\n\n  addCoronas() {\n    for (let i = 0; i < this.coronaCount; i++) {\n      const corona = new Corona({ game: this, speed: this.speed });\n      this.coronas.push(corona);\n    }\n  }\n\n  addCells() {\n    for (let i = 0; i < this.cellCount; i++) {\n      const cell = new Cell({ game: this, speed: this.speed });\n      this.cells.push(cell);\n    }\n  }\n\n  updateSpeed(speed) {\n    this.speed = speed;\n    this.coronas.forEach((corona) => {\n      corona.speed = this.speed;\n    });\n    this.cells.forEach((cell) => {\n      cell.speed = this.speed;\n    });\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n  }\n\n  static randomPos() {\n    const x = Math.floor(Math.random() * (Game.DIM_X - 30)) + 15;\n    const y = Math.floor(Math.random() * (Game.DIM_Y - 30)) + 15;\n    return [x, y];\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    var grd = ctx.createRadialGradient(600, 400, 10, 600, 400, 600);\n    var grd = ctx.createLinearGradient(0, 0, 0, 800);\n    grd.addColorStop(0, \"#184065\");\n    // grd.addColorStop(0, \"#46bfcf\");\n    grd.addColorStop(1, \"#000000\");\n\n    ctx.fillStyle = grd;\n    ctx.fill();\n\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    this.allObjects().forEach((el) => el.draw(ctx));\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((el) => el.move(delta));\n  }\n\n  remove(object) {\n    if (object instanceof Corona) {\n      const index = this.coronas.indexOf(object);\n      this.coronas.splice(index, 1);\n      if (!this.coronas.length) {\n        setTimeout(() => {\n          this.over = \"win\";\n          this.bullets = [];\n        }, 500);\n      }\n    } else if (object instanceof Cell) {\n      const index = this.cells.indexOf(object);\n      this.cells.splice(index, 1);\n      const corona = new Corona({\n        game: this,\n        pos: object.pos,\n        speed: this.speed,\n      });\n      this.coronas.push(corona);\n      if (!this.cells.length) {\n        this.over = \"lose\";\n        this.bullets = [];\n      }\n    } else if (object instanceof Ship) {\n      this.lives -= 1;\n      object.relocate();\n      if (this.lives === 0) this.over = \"killed\";\n    } else if (object instanceof Bullet) {\n      const index = this.bullets.indexOf(object);\n      this.bullets.splice(index, 1);\n    }\n  }\n\n  outOfBound(pos, radius) {\n    return (\n      pos[0] < 0 + radius ||\n      pos[1] < 0 + radius ||\n      pos[0] > Game.DIM_X - radius ||\n      pos[1] > Game.DIM_Y - radius\n    );\n  }\n\n  wrap(pos) {\n    return [Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)];\n  }\n\n  allObjects() {\n    return [].concat(this.coronas, this.ship, this.bullets, this.cells);\n  }\n\n  checkCollisions() {\n    let all = this.allObjects();\n\n    for (let i = 0; i < all.length - 1; i++) {\n      for (let j = i + 1; j < all.length; j++) {\n        if (all[i].isCollidingWith(all[j])) {\n          all[i].collide(all[j]);\n        }\n      }\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  moveShip(direction) {\n    this.ship.power(direction);\n  }\n\n  fire() {\n    this.ship.fireBullet();\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1200; //window.innerWidth;\nGame.DIM_Y = 800; //window.innerHeight;\n// Game.DIM_X = window.screen.width;\n// Game.DIM_Y = window.screen.height;\nGame.FPS = 32;\n\nexport default Game;\n","import Game from \"./game\";\n\nclass GameView {\n  constructor(ctx) {\n    this.game = null;\n    this.ctx = ctx;\n    this.startGame(\"preview\");\n    this.startDialog({ intro: true });\n\n    $(\".restart\").on(\"click\", () => {\n      this.game = null;\n      $(\".dialog\").remove();\n      this.startDialog({ intro: false });\n    });\n\n    $(\".info\").on(\"click\", () => {\n      if ($(\".attribute\").length) return;\n      const $info = $(\n        \"<p class='attribute'>Game icons downloaded from www.flaticon.com</p>\"\n      );\n      $(\".iconContainer\").append($info);\n      setTimeout(() => {\n        $(\".attribute\").remove();\n      }, 3000);\n    });\n  }\n\n  startDialog(intro) {\n    const titleText = \"COVID KILLER\";\n    const instruction = $(\n      \"<p class='dialogMission'>YOU ARE A WHITE BLOOD CELL. KILL ALL THE CORONA VIRUSES BEFORE THEY INFECT THE HEALTHY CELLS!</p><p class='dialogInstructions'>MOVE: <span class='dialogInstructionsColor'>W, A, S, D </span>   &   SHOOT: <span class='dialogInstructionsColor'>SPACE</span></p>\"\n    );\n    const buttonText = \"START GAME\";\n    this.createDialog(titleText, instruction, buttonText, intro);\n  }\n\n  startGame(mode) {\n    const coronaCount = parseInt($(\"#corona\").val()) || 3;\n    const cellCount = parseInt($(\"#cell\").val()) || 10;\n    const lives = 3;\n    let speed = 1;\n    if (mode !== \"preview\") {\n      const difficulty = $(\".dialog\").find(\".selected\").attr(\"id\");\n      if (difficulty === \"easy\") speed = 0.25;\n      else if (difficulty === \"hard\") speed = 3;\n      this.countdown(3);\n    } else {\n      speed = 0.001;\n    }\n\n    this.game = new Game(coronaCount, cellCount, speed, lives, mode);\n\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n\n    $(\".dialog\").remove();\n\n    if ($(\"#difficulty\").children().length) {\n      $(\"#difficulty\").children().remove();\n    }\n\n    const $buttons = this.difficultyButtons(\"game\", difficulty);\n    $(\"#difficulty\").append($buttons);\n\n    $(document).on(\"click\", \".diffButt-game\", (e) => {\n      $(\".diffButt-game\").removeClass(\"selected\");\n      let val = e.target.id;\n      let speed = 1;\n      if (val === \"easy\") speed = 0.25;\n      else if (val === \"hard\") speed = 3;\n\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n      this.game.updateSpeed(speed);\n    });\n\n    $(\"#stats\").removeClass(\"hidden\");\n    $(\"#difficultyContainer\").removeClass(\"hidden\");\n\n    this.updateStats();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  countdown(seconds) {\n    const $number = $(\"<h1></h1>\").addClass(\"countdown\").text(seconds);\n    $(\"body\").append($number);\n\n    const counter = setInterval(() => {\n      seconds--;\n      $number.text(seconds);\n      if (seconds <= 0) {\n        clearInterval(counter);\n        $number.text(\"KILL THE CORONA!\");\n        setTimeout(() => {\n          $number.remove();\n        }, 1000);\n      }\n    }, 1000);\n  }\n\n  step(delta) {\n    this.game.step(delta);\n    this.game.draw(this.ctx);\n  }\n\n  animate(time) {\n    const delta = time - this.lastTime;\n    this.step(delta);\n    this.lastTime = time;\n    this.updateStats();\n    if (!this.game.over) {\n      requestAnimationFrame(this.animate.bind(this));\n    } else {\n      this.gameOver();\n    }\n\n    const direction = [0, 0];\n    for (const k of Object.keys(GameView.MOVES)) {\n      const move = GameView.MOVES[k];\n      if (key.isPressed(k)) {\n        direction[0] += move[0];\n        direction[1] += move[1];\n      }\n    }\n\n    this.game.moveShip(direction);\n  }\n\n  updateStats() {\n    $(\"#lives\").text(this.game.lives);\n    $(\"#cells\").text(this.game.cells.length);\n    $(\"#coronas\").text(this.game.coronas.length);\n  }\n\n  gameOver() {\n    const titleText =\n      this.game.over === \"win\" ? \"YOU BEAT CORONA !\" : \"CORONA BEAT YOU !\";\n    const buttonText = \"PLAY AGAIN\";\n    let instructionText;\n    switch (this.game.over) {\n      case \"win\":\n        instructionText = \"YOU DESTROYED ALL THE CORONA VIRUSES! :)\";\n        break;\n      case \"lose\":\n        instructionText = \"ALL THE HEALTHY CELLS WERE INFECTED! :(\";\n        break;\n      default:\n        instructionText = \"YOU WERE KILLED BEFORE SAVING THE HEALTHY CELLS! :(\";\n    }\n    const instruction = $(\"<p></p>\").text(instructionText);\n    this.createDialog(titleText, instruction, buttonText, { intro: false });\n  }\n\n  createDialog(titleText, instruction, buttonText, { intro }) {\n    const $dialog = $(\"<div></div>\").addClass(\"dialog\");\n    const $title = $(\"<h1></h1>\").addClass(\"dialogTitle\").text(titleText);\n    $dialog.append($title);\n    $dialog.append(\"<br/>\");\n\n    $dialog.append(instruction);\n\n    if (!intro) {\n      const $inputs = $(\"<div></div>\").addClass(\"inputs\");\n      const $coronaDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $coronaText = $(\"<p>CORONA VIRUSES:</p>\");\n      const $coronaNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"3\" id=\"corona\"></p>'\n      );\n      $coronaDiv.append($coronaText).append($coronaNum);\n      const $cellDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $cellText = $(\"<p>HEALTHY CELLS:</p>\");\n      const $cellNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"10\" id=\"cell\"></p>'\n      );\n      $cellDiv.append($cellText).append($cellNum);\n      $inputs.append($coronaDiv).append($cellDiv);\n      $dialog.append($inputs);\n    }\n    const $button = $(\"<button></button>\")\n      .addClass(\"dialogButton\")\n      .text(buttonText);\n\n    const $buttons = this.difficultyButtons(\"dialog\");\n    $dialog.append($buttons);\n\n    $(document).on(\"click\", \".diffButt-dialog\", (e) => {\n      $(\".diffButt-dialog\").removeClass(\"selected\");\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n    });\n\n    $button.on(\"click\", this.startGame.bind(this));\n    $dialog.append(\"<br/>\");\n    $dialog.append($button);\n\n    $(\"body\").append($dialog);\n  }\n\n  difficultyButtons(location, selected = \"normal\") {\n    const $container = $(\"<div></div>\").addClass(\"difficultyButtons\");\n    const $text = $(\"<p>DIFFICULTY:</p>\");\n    const $easy = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"easy\")\n      .text(\"SHELTER IN PLACE\");\n\n    const $normal = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"normal\")\n      .text(\"NORMAL\");\n    const $hard = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"hard\")\n      .text(\"TRUMP RALLY\");\n\n    if (selected === \"easy\") $easy.addClass(\"selected\");\n    else if (selected === \"hard\") $hard.addClass(\"selected\");\n    else $normal.addClass(\"selected\");\n\n    $container.append($text).append($easy).append($normal).append($hard);\n    return $container;\n  }\n\n  bindKeyHandlers() {\n    const game = this.game;\n    key(\"space\", function () {\n      game.fire();\n    });\n  }\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  a: [-1, 0],\n  s: [0, 1],\n  d: [1, 0],\n};\n\nexport default GameView;\n","console.log(\"Webpack is working!\");\r\nimport GameView from \"./game_view\";\r\nimport Game from \"./game\";\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\r\n  canvasEl.height = Game.DIM_Y;\r\n  canvasEl.width = Game.DIM_X;\r\n  const ctx = canvasEl.getContext(\"2d\");\r\n\r\n  const gameView = new GameView(ctx);\r\n});\r\n"],"sourceRoot":""}