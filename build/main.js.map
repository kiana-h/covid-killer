{"version":3,"sources":["webpack:///./src/bullet.js","webpack:///./src/cell.js","webpack:///./src/corona.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js","webpack:///./src/moving_object.js","webpack:///./src/ship.js","webpack:///./src/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA8C;AACpB;AACG;;AAE7B;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,sDAAY;AACjC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;AC3BqB;AACjB;AACG;AACA;AACI;;AAEjC;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mDAAY;AAC/B,0BAA0B;AAC1B;AACA;AACA;AACA,6CAA6C,oDAAc;AAC3D,iCAAiC,uDAAc;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;;;AChCuB;AACjB;AACG;AACA;AACI;AACJ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mDAAY;AACjC,0BAA0B;AAC1B;AACA;AACA;AACA,6CAA6C,oDAAc;AAC3D,iCAAiC,uDAAc;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,6CAAI;AAC7B;AACA;AACA,yBAAyB,6CAAI;AAC7B;AACA;AACA,yBAAyB,+CAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;AC7FQ;AACJ;AACI;AACJ;AACA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,0CAAI,EAAE,aAAa;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mBAAmB,sBAAsB;AACzC,yBAAyB,4CAAM,EAAE,gCAAgC;AACjE;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC,uBAAuB,0CAAI,EAAE,gCAAgC;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,4CAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,4BAA4B,0CAAI;AACrC;AACA;AACA,yBAAyB,4CAAM;AAC/B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK,4BAA4B,0CAAI;AACrC;AACA;AACA;AACA,KAAK,4BAA4B,4CAAM;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,+CAAS;AACf,MAAM,+CAAS;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACvKM;;AAE1B;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;;AAEpC;AACA;AACA;AACA,wBAAwB,eAAe;AACvC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,0CAAI;;AAExB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;;AAEA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;AClPxB;AACmC;AACT;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAQ;;AAE/B;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;;;;ACdyB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAS;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;AC/CkB;AACpB;AACG;AACI;;AAEjC;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,sDAAY;AAC/B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uDAAc;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAM,EAAE,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;AC/CpB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,IAAI,EAAC;;;;;;;UChCpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\n\nconst DEFAULTS = {\n  RADIUS: 3,\n  COLOR: \"#00c1d1\",\n  SPEED: 6,\n};\n\nclass Bullet extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = [...options.game.ship.face];\n    const shipPos = options.game.ship.pos;\n    options.pos = [\n      shipPos[0] + options.direction[0] * 10,\n      shipPos[1] + options.direction[1] * 10,\n    ];\n    super(options);\n  }\n}\n\nBullet.prototype.wrappable = false;\n\nexport default Bullet;\n","import MovingObject from \"./moving_object\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Ship from \"./ship.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  COLOR: \"#5cdb94\",\n  RADIUS: 25,\n  SPEED: 1,\n};\n\nclass Cell extends MovingObject {\n  constructor(options = {}) {\n    options.speed = options.speed || DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = options.direction || Util.randomVec();\n    options.pos = options.pos || Game.randomPos();\n    super(options);\n    this.speed = this.speed || 1;\n  }\n\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Cell.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n}\nconst img = new Image();\nimg.src = `./assets/cell3.png`;\nCell.image = img;\n\nexport default Cell;\n","import MovingObject from \"./moving_object\";\r\nimport Util from \"./util\";\r\nimport Game from \"./game.js\";\r\nimport Ship from \"./ship.js\";\r\nimport Bullet from \"./bullet.js\";\r\nimport Cell from \"./cell.js\";\r\n\r\nconst DEFAULTS = {\r\n  COLOR: \"#c90579\",\r\n  RADIUS: 25,\r\n  SPEED: 1,\r\n};\r\n\r\nclass Corona extends MovingObject {\r\n  constructor(options = {}) {\r\n    options.speed = options.speed || DEFAULTS.SPEED;\r\n    options.color = DEFAULTS.COLOR;\r\n    options.radius = DEFAULTS.RADIUS;\r\n    options.direction = options.direction || Util.randomVec();\r\n    options.pos = options.pos || Game.randomPos();\r\n    super(options);\r\n  }\r\n\r\n  draw(ctx) {\r\n    const pos = this.pos;\r\n    ctx.drawImage(Corona.image, pos[0] - 25, pos[1] - 25, 50, 50);\r\n  }\r\n\r\n  collide(other) {\r\n    if (other instanceof Corona) {\r\n      this.bounce(this, other);\r\n    }\r\n    if (other instanceof Cell) {\r\n      other.remove();\r\n    }\r\n    if (other instanceof Ship) {\r\n      other.remove();\r\n    }\r\n    if (other instanceof Bullet) {\r\n      this.remove();\r\n    }\r\n  }\r\n  bounce(obj1, obj2) {\r\n    const [p1, p2] = [obj1.pos, obj2.pos];\r\n    const [d1, d2] = [obj1.direction, obj2.direction];\r\n    const [s1, s2] = [obj1.speed, obj2.speed];\r\n\r\n    //calculate velocity based on direction and speed\r\n    // const [v1, v2] = [\r\n    //   [d1[0] * s1, d1[1] * s1],\r\n    //   [d2[0] * s2, d1[2] * s2],\r\n    // ];\r\n\r\n    //get vector of collision (arrow between the center of two objects)\r\n    const vCollision = { x: p2[0] - p1[0], y: p2[1] - p1[1] };\r\n\r\n    //calculate distance between two objects\r\n    const distance = Math.sqrt(\r\n      Math.pow(obj2.pos[0] - obj1.pos[0], 2) +\r\n        Math.pow(obj2.pos[1] - obj1.pos[1], 2)\r\n    );\r\n\r\n    //scale the vector of collision to get the collision normal / direction\r\n    const vCollisionNorm = {\r\n      x: vCollision.x / distance,\r\n      y: vCollision.y / distance,\r\n    };\r\n\r\n    //calculate relative velocity\r\n    const vRelativeVelocity = { x: d1[0] - d2[0], y: d1[1] - d2[1] };\r\n\r\n    //calculate speed based on relative velocity and normal vector\r\n    const speed =\r\n      vRelativeVelocity.x * vCollisionNorm.x +\r\n      vRelativeVelocity.y * vCollisionNorm.y;\r\n\r\n    //if objects are moving away from eachother no further change is needed\r\n    if (speed < 0) {\r\n      return;\r\n    }\r\n\r\n    //move objects in opposite directions\r\n    obj1.direction[0] -= speed * vCollisionNorm.x;\r\n    obj1.direction[1] -= speed * vCollisionNorm.y;\r\n    obj2.direction[0] += speed * vCollisionNorm.x;\r\n    obj2.direction[1] += speed * vCollisionNorm.y;\r\n  }\r\n}\r\n\r\nconst img = new Image();\r\nimg.src = \"./assets/virus.png\";\r\nCorona.image = img;\r\n\r\nexport default Corona;\r\n","import Corona from \"./corona\";\nimport Ship from \"./ship\";\nimport Bullet from \"./bullet\";\nimport Util from \"./util\";\nimport Cell from \"./cell\";\n\nclass Game {\n  constructor(coronaCount = 3, cellCount = 10, speed = 1, lives = 3, mode) {\n    this.coronas = [];\n    this.cells = [];\n    this.coronaCount = coronaCount;\n    this.cellCount = cellCount;\n    this.speed = speed;\n    this.over = false;\n    this.bullets = [];\n    this.lives = lives;\n\n    this.ship = new Ship({ game: this });\n    const time = mode === \"preview\" ? 0 : 4000;\n    setTimeout(() => {\n      this.addCoronas();\n      this.addCells();\n    }, time);\n  }\n\n  addCoronas() {\n    for (let i = 0; i < this.coronaCount; i++) {\n      const corona = new Corona({ game: this, speed: this.speed });\n      this.coronas.push(corona);\n    }\n  }\n\n  addCells() {\n    for (let i = 0; i < this.cellCount; i++) {\n      const cell = new Cell({ game: this, speed: this.speed });\n      this.cells.push(cell);\n    }\n  }\n\n  updateSpeed(speed) {\n    this.speed = speed;\n    this.coronas.forEach((corona) => {\n      corona.speed = this.speed;\n    });\n    this.cells.forEach((cell) => {\n      cell.speed = this.speed;\n    });\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n  }\n\n  static randomPos() {\n    const x = Math.floor(Math.random() * (window.innerWidth - 30)) + 15;\n    const y = Math.floor(Math.random() * (window.innerHeight - 230)) + 115;\n    return [x, y];\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight - 200);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight - 200);\n\n    var grd = ctx.createRadialGradient(600, 400, 10, 600, 400, 600);\n    var grd = ctx.createLinearGradient(0, 0, 0, window.innerHeight);\n    grd.addColorStop(0, \"#184065\");\n    // grd.addColorStop(0, \"#46bfcf\");\n    grd.addColorStop(1, \"#000000\");\n\n    ctx.fillStyle = grd;\n    ctx.fill();\n\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    this.allObjects().forEach((el) => el.draw(ctx));\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((el) => el.move(delta));\n  }\n\n  remove(object) {\n    if (object instanceof Corona) {\n      const index = this.coronas.indexOf(object);\n      this.coronas.splice(index, 1);\n      if (!this.coronas.length) {\n        setTimeout(() => {\n          this.over = \"win\";\n          this.bullets = [];\n        }, 500);\n      }\n    } else if (object instanceof Cell) {\n      const index = this.cells.indexOf(object);\n      this.cells.splice(index, 1);\n      const corona = new Corona({\n        game: this,\n        pos: object.pos,\n        speed: this.speed,\n      });\n      this.coronas.push(corona);\n      if (!this.cells.length) {\n        this.over = \"lose\";\n        this.bullets = [];\n      }\n    } else if (object instanceof Ship) {\n      this.lives -= 1;\n      object.relocate();\n      if (this.lives === 0) this.over = \"killed\";\n    } else if (object instanceof Bullet) {\n      const index = this.bullets.indexOf(object);\n      this.bullets.splice(index, 1);\n    }\n  }\n\n  outOfBound(pos, radius) {\n    return (\n      pos[0] < 0 + radius ||\n      pos[1] < 0 + radius ||\n      pos[0] > window.innerWidth - radius ||\n      pos[1] > window.innerHeight - 200 - radius\n    );\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], window.innerWidth),\n      Util.wrap(pos[1], window.innerHeight - 200),\n    ];\n  }\n\n  allObjects() {\n    return [].concat(this.coronas, this.ship, this.bullets, this.cells);\n  }\n\n  checkCollisions() {\n    let all = this.allObjects();\n\n    for (let i = 0; i < all.length - 1; i++) {\n      for (let j = i + 1; j < all.length; j++) {\n        if (all[i].isCollidingWith(all[j])) {\n          all[i].collide(all[j]);\n        }\n      }\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  moveShip(direction) {\n    this.ship.power(direction);\n  }\n\n  fire() {\n    this.ship.fireBullet();\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1200; //window.innerWidth;\nGame.DIM_Y = 800; //window.innerHeight;\n// Game.DIM_X = window.screen.width;\n// Game.DIM_Y = window.screen.height;\nGame.FPS = 32;\n\nexport default Game;\n","import Game from \"./game\";\n\nclass GameView {\n  constructor(ctx) {\n    this.game = null;\n    this.ctx = ctx;\n    this.startGame(\"preview\");\n    this.startDialog({ intro: true });\n\n    $(\".restart\").on(\"click\", () => {\n      this.game = null;\n      $(\".dialog\").remove();\n      this.startDialog({ intro: false });\n    });\n\n    $(\".info\").on(\"click\", () => {\n      if ($(\".attribute\").length) return;\n      const $info = $(\n        \"<p class='attribute'>Game icons downloaded from www.flaticon.com</p>\"\n      );\n      $(\".iconContainer\").append($info);\n      setTimeout(() => {\n        $(\".attribute\").remove();\n      }, 3000);\n    });\n  }\n\n  startDialog(intro) {\n    const titleText = \"COVID KILLER\";\n    const instruction = $(\n      \"<p class='dialogMission'>YOU ARE A WHITE BLOOD CELL. KILL ALL THE CORONA VIRUSES BEFORE THEY INFECT THE HEALTHY CELLS!</p><p class='dialogInstructions'>MOVE: <span class='dialogInstructionsColor'>W, A, S, D </span>   &   SHOOT: <span class='dialogInstructionsColor'>SPACE</span></p>\"\n    );\n    const buttonText = \"START GAME\";\n    this.createDialog(titleText, instruction, buttonText, intro);\n  }\n\n  startGame(mode) {\n    let coronaCount = parseInt($(\"#corona\").val());\n    coronaCount = isNaN(coronaCount) ? 3 : coronaCount;\n    let cellCount = parseInt($(\"#cell\").val());\n    cellCount = isNaN(cellCount) ? 10 : cellCount;\n    const lives = 3;\n    let speed = 1;\n    let selected;\n    if (mode !== \"preview\") {\n      selected = $(\".dialog\").find(\".selected\").attr(\"id\");\n      if (selected === \"easy\") speed = 0.25;\n      else if (selected === \"hard\") speed = 3;\n      this.countdown(3);\n    } else {\n      speed = 0.001;\n    }\n\n    this.game = new Game(coronaCount, cellCount, speed, lives, mode);\n\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n\n    $(\".dialog\").remove();\n\n    if ($(\"#difficulty\").children().length) {\n      $(\"#difficulty\").children().remove();\n    }\n\n    const $buttons = this.difficultyButtons(\"game\", selected);\n    $(\"#difficulty\").append($buttons);\n\n    $(document).on(\"click\", \".diffButt-game\", (e) => {\n      $(\".diffButt-game\").removeClass(\"selected\");\n      let val = e.target.id;\n      let speed = 1;\n      if (val === \"easy\") speed = 0.25;\n      else if (val === \"hard\") speed = 3;\n\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n      this.game.updateSpeed(speed);\n    });\n\n    $(\"#stats\").removeClass(\"hidden\");\n    $(\"#difficultyContainer\").removeClass(\"hidden\");\n\n    this.updateStats();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  countdown(seconds) {\n    const $number = $(\"<h1></h1>\").addClass(\"countdown\").text(seconds);\n    $(\"body\").append($number);\n\n    const counter = setInterval(() => {\n      seconds--;\n      $number.text(seconds);\n      if (seconds <= 0) {\n        clearInterval(counter);\n        $number.text(\"KILL THE CORONA!\");\n        setTimeout(() => {\n          $number.remove();\n        }, 1000);\n      }\n    }, 1000);\n  }\n\n  step(delta) {\n    this.game.step(delta);\n    this.game.draw(this.ctx);\n  }\n\n  animate(time) {\n    const delta = time - this.lastTime;\n    this.step(delta);\n    this.lastTime = time;\n    this.updateStats();\n    if (!this.game.over) {\n      requestAnimationFrame(this.animate.bind(this));\n    } else {\n      this.gameOver();\n    }\n\n    const direction = [0, 0];\n    for (const k of Object.keys(GameView.MOVES)) {\n      const move = GameView.MOVES[k];\n      if (key.isPressed(k)) {\n        direction[0] += move[0];\n        direction[1] += move[1];\n      }\n    }\n\n    this.game.moveShip(direction);\n  }\n\n  updateStats() {\n    $(\"#lives\").text(this.game.lives);\n    $(\"#cells\").text(this.game.cells.length);\n    $(\"#coronas\").text(this.game.coronas.length);\n  }\n\n  gameOver() {\n    const titleText =\n      this.game.over === \"win\" ? \"YOU BEAT CORONA !\" : \"CORONA BEAT YOU !\";\n    const buttonText = \"PLAY AGAIN\";\n    let instructionText;\n    switch (this.game.over) {\n      case \"win\":\n        instructionText = \"YOU DESTROYED ALL THE CORONA VIRUSES! :)\";\n        break;\n      case \"lose\":\n        instructionText = \"ALL THE HEALTHY CELLS WERE INFECTED! :(\";\n        break;\n      default:\n        instructionText = \"YOU WERE KILLED BEFORE SAVING THE HEALTHY CELLS! :(\";\n    }\n    const instruction = $(\"<p></p>\").text(instructionText);\n    this.createDialog(titleText, instruction, buttonText, { intro: false });\n  }\n\n  createDialog(titleText, instruction, buttonText, { intro }) {\n    if ($(\".dialog\").length) return;\n    const $dialog = $(\"<div></div>\").addClass(\"dialog\");\n    const $title = $(\"<h1></h1>\").addClass(\"dialogTitle\").text(titleText);\n    $dialog.append($title);\n    $dialog.append(\"<br/>\");\n\n    $dialog.append(instruction);\n\n    if (!intro) {\n      const $inputs = $(\"<div></div>\").addClass(\"inputs\");\n      const $coronaDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $coronaText = $(\"<p>CORONA VIRUSES:</p>\");\n      const $coronaNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"3\" id=\"corona\"></p>'\n      );\n      $coronaDiv.append($coronaText).append($coronaNum);\n      const $cellDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $cellText = $(\"<p>HEALTHY CELLS:</p>\");\n      const $cellNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"10\" id=\"cell\"></p>'\n      );\n      $cellDiv.append($cellText).append($cellNum);\n      $inputs.append($coronaDiv).append($cellDiv);\n      $dialog.append($inputs);\n    }\n    const $button = $(\"<button></button>\")\n      .addClass(\"dialogButton\")\n      .text(buttonText);\n\n    const $buttons = this.difficultyButtons(\"dialog\");\n    $dialog.append($buttons);\n\n    $(document).on(\"click\", \".diffButt-dialog\", (e) => {\n      $(\".diffButt-dialog\").removeClass(\"selected\");\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n    });\n\n    $button.on(\"click\", this.startGame.bind(this));\n    $dialog.append(\"<br/>\");\n    $dialog.append($button);\n\n    $(\"body\").append($dialog);\n  }\n\n  difficultyButtons(location, selected = \"normal\") {\n    const $container = $(\"<div></div>\").addClass(\"difficultyButtons\");\n    const $text = $(\"<p>DIFFICULTY:</p>\");\n    const $easy = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"easy\")\n      .text(\"SHELTER IN PLACE\");\n\n    const $normal = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"normal\")\n      .text(\"NORMAL\");\n    const $hard = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"hard\")\n      .text(\"TRUMP RALLY\");\n\n    if (selected === \"easy\") $easy.addClass(\"selected\");\n    else if (selected === \"hard\") $hard.addClass(\"selected\");\n    else $normal.addClass(\"selected\");\n\n    $container.append($text).append($easy).append($normal).append($hard);\n    return $container;\n  }\n\n  bindKeyHandlers() {\n    const game = this.game;\n    key(\"space\", function () {\n      game.fire();\n    });\n  }\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  a: [-1, 0],\n  s: [0, 1],\n  d: [1, 0],\n};\n\nexport default GameView;\n","console.log(\"Webpack is working!\");\r\nimport GameView from \"./game_view\";\r\nimport Game from \"./game\";\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\r\n  canvasEl.height = window.innerHeight - 200;\r\n  canvasEl.width = window.innerWidth;\r\n  const ctx = canvasEl.getContext(\"2d\");\r\n  const gameView = new GameView(ctx);\r\n\r\n  $(window).on(\"resize\", () => {\r\n    canvasEl.height = window.innerHeight - 200;\r\n    canvasEl.width = window.innerWidth;\r\n  });\r\n});\r\n","import Util from \"./util\";\r\n\r\nclass MovingObject {\r\n  constructor(options) {\r\n    this.pos = options.pos;\r\n    this.radius = options.radius;\r\n    this.color = options.color;\r\n    this.speed = options.speed;\r\n    this.direction = options.direction;\r\n    this.game = options.game;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  move(delta) {\r\n    delta = delta / 10 || 1;\r\n    const x = this.pos[0] + this.direction[0] * this.speed * delta;\r\n    const y = this.pos[1] + this.direction[1] * this.speed * delta;\r\n    this.pos = [x, y];\r\n    if (this.game.outOfBound(this.pos, this.radius)) {\r\n      if (this.wrappable) {\r\n        this.pos = this.game.wrap([x, y]);\r\n      } else {\r\n        this.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  isCollidingWith(other) {\r\n    return Util.dist(this.pos, other.pos) < this.radius + other.radius;\r\n  }\r\n\r\n  remove() {\r\n    this.game.remove(this);\r\n  }\r\n\r\n  collide(other) {}\r\n}\r\n\r\nMovingObject.prototype.wrappable = true;\r\n\r\nexport default MovingObject;\r\n","import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  RADIUS: 20,\n  COLOR: \"white\",\n  SPEED: 1.5,\n};\n\nclass Ship extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = options.color || DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.pos = options.pos || [\n      window.innerWidth / 2,\n      (window.innerHeight - 200) / 2,\n    ];\n    options.direction = options.direction || [0, 0];\n    super(options);\n    this.face = [1, 0];\n  }\n\n  relocate() {\n    this.pos = Game.randomPos();\n  }\n\n  power(direction) {\n    this.direction[0] = direction[0] * DEFAULTS.SPEED;\n    this.direction[1] = direction[1] * DEFAULTS.SPEED;\n    if (direction[0] != 0 || direction[1] != 0) this.face = direction;\n  }\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Ship.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n  fireBullet() {\n    // if (this.direction[0] === 0 && this.direction[1] === 0) return;\n    const bullet = new Bullet({ game: this.game });\n    this.game.addBullet(bullet);\n  }\n}\nconst img = new Image();\nimg.src = \"./assets/ship.png\";\nShip.image = img;\nexport default Ship;\n","const Util = {\r\n  inherits(ChildClass, ParentClass) {\r\n    ChildClass.prototype = Object.create(ParentClass.prototype);\r\n    ChildClass.constructor = ChildClass;\r\n  },\r\n\r\n  randomVec(length) {\r\n    //angle between 0 & 180\r\n    const deg = 2 * Math.PI * Math.random();\r\n    //get x & y value of degree\r\n    const x = Math.cos(deg);\r\n    const y = Math.sin(deg);\r\n    return [x, y];\r\n  },\r\n\r\n  wrap(cord, max) {\r\n    if (cord > max) {\r\n      return cord % max;\r\n    } else if (cord < 0) {\r\n      return max - (cord % max);\r\n    } else {\r\n      return cord;\r\n    }\r\n  },\r\n\r\n  dist(pos1, pos2) {\r\n    const x = Math.abs(pos1[0] - pos2[0]);\r\n    const y = Math.abs(pos1[1] - pos2[1]);\r\n    return Math.sqrt(x * x + y * y);\r\n  },\r\n};\r\n\r\nexport default Util;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}