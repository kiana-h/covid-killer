{"version":3,"sources":["webpack:///./src/util.js","webpack:///./src/moving_object.js","webpack:///./src/bullet.js","webpack:///./src/ship.js","webpack:///./src/cell.js","webpack:///./src/corona.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js"],"names":["ChildClass","ParentClass","prototype","Object","create","constructor","length","deg","Math","PI","random","cos","sin","wrap","cord","max","pos1","pos2","x","abs","y","sqrt","MovingObject","options","this","pos","radius","color","speed","direction","game","ctx","fillStyle","beginPath","arc","fill","closePath","delta","outOfBound","wrappable","remove","other","Bullet","ship","face","shipPos","super","Ship","window","innerWidth","innerHeight","drawImage","image","bullet","addBullet","img","Image","src","Cell","Corona","bounce","obj1","obj2","p1","p2","d1","d2","s1","s2","vCollision","distance","pow","vCollisionNorm","Game","coronaCount","cellCount","lives","mode","coronas","cells","over","bullets","setTimeout","addCoronas","addCells","i","corona","push","cell","forEach","floor","clearRect","BG_COLOR","fillRect","grd","createRadialGradient","createLinearGradient","addColorStop","allObjects","el","draw","move","object","index","indexOf","splice","relocate","concat","all","j","isCollidingWith","collide","moveObjects","checkCollisions","power","fireBullet","DIM_X","DIM_Y","FPS","GameView","startGame","startDialog","intro","$","on","$info","append","instruction","createDialog","parseInt","val","isNaN","selected","find","attr","countdown","bindKeyHandlers","lastTime","children","$buttons","difficultyButtons","document","e","removeClass","target","id","event","addClass","updateSpeed","updateStats","requestAnimationFrame","animate","bind","seconds","$number","text","counter","setInterval","clearInterval","step","time","gameOver","k","keys","MOVES","key","isPressed","moveShip","titleText","instructionText","buttonText","$dialog","$title","$inputs","$coronaDiv","$coronaText","$coronaNum","$cellDiv","$cellText","$cellNum","$button","location","$container","$text","$easy","$normal","$hard","fire","w","a","s","d","console","log","addEventListener","canvasEl","getElementsByTagName","height","width","getContext"],"mappings":"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","file":"main.js","sourcesContent":["const Util = {\n  inherits(ChildClass, ParentClass) {\n    ChildClass.prototype = Object.create(ParentClass.prototype);\n    ChildClass.constructor = ChildClass;\n  },\n\n  randomVec(length) {\n    //angle between 0 & 180\n    const deg = 2 * Math.PI * Math.random();\n    //get x & y value of degree\n    const x = Math.cos(deg);\n    const y = Math.sin(deg);\n    return [x, y];\n  },\n\n  wrap(cord, max) {\n    if (cord > max) {\n      return cord % max;\n    } else if (cord < 0) {\n      return max - (cord % max);\n    } else {\n      return cord;\n    }\n  },\n\n  dist(pos1, pos2) {\n    const x = Math.abs(pos1[0] - pos2[0]);\n    const y = Math.abs(pos1[1] - pos2[1]);\n    return Math.sqrt(x * x + y * y);\n  },\n};\n\nexport default Util;\n","import Util from \"./util\";\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.speed = options.speed;\n    this.direction = options.direction;\n    this.game = options.game;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  move(delta) {\n    delta = delta / 10 || 1;\n    const x = this.pos[0] + this.direction[0] * this.speed * delta;\n    const y = this.pos[1] + this.direction[1] * this.speed * delta;\n    this.pos = [x, y];\n    if (this.game.outOfBound(this.pos, this.radius)) {\n      if (this.wrappable) {\n        this.pos = this.game.wrap([x, y]);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  isCollidingWith(other) {\n    return Util.dist(this.pos, other.pos) < this.radius + other.radius;\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n\n  collide(other) {}\n}\n\nMovingObject.prototype.wrappable = true;\n\nexport default MovingObject;\n","import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\n\nconst DEFAULTS = {\n  RADIUS: 3,\n  COLOR: \"#00c1d1\",\n  SPEED: 6,\n};\n\nclass Bullet extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = [...options.game.ship.face];\n    const shipPos = options.game.ship.pos;\n    options.pos = [\n      shipPos[0] + options.direction[0] * 10,\n      shipPos[1] + options.direction[1] * 10,\n    ];\n    super(options);\n  }\n}\n\nBullet.prototype.wrappable = false;\n\nexport default Bullet;\n","import MovingObject from \"./moving_object.js\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  RADIUS: 20,\n  COLOR: \"white\",\n  SPEED: 1.5,\n};\n\nclass Ship extends MovingObject {\n  constructor(options = {}) {\n    options.speed = DEFAULTS.SPEED;\n    options.color = options.color || DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.pos = options.pos || [\n      window.innerWidth / 2,\n      (window.innerHeight - 200) / 2,\n    ];\n    options.direction = options.direction || [0, 0];\n    super(options);\n    this.face = [1, 0];\n  }\n\n  relocate() {\n    this.pos = Game.randomPos();\n  }\n\n  power(direction) {\n    this.direction[0] = direction[0] * DEFAULTS.SPEED;\n    this.direction[1] = direction[1] * DEFAULTS.SPEED;\n    if (direction[0] != 0 || direction[1] != 0) this.face = direction;\n  }\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Ship.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n  fireBullet() {\n    // if (this.direction[0] === 0 && this.direction[1] === 0) return;\n    const bullet = new Bullet({ game: this.game });\n    this.game.addBullet(bullet);\n  }\n}\nconst img = new Image();\nimg.src = \"./assets/ship.png\";\nShip.image = img;\nexport default Ship;\n","import MovingObject from \"./moving_object\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Ship from \"./ship.js\";\nimport Bullet from \"./bullet.js\";\n\nconst DEFAULTS = {\n  COLOR: \"#5cdb94\",\n  RADIUS: 25,\n  SPEED: 1,\n};\n\nclass Cell extends MovingObject {\n  constructor(options = {}) {\n    options.speed = options.speed || DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = options.direction || Util.randomVec();\n    options.pos = options.pos || Game.randomPos();\n    super(options);\n    this.speed = this.speed || 1;\n  }\n\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Cell.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n}\nconst img = new Image();\nimg.src = `./assets/cell3.png`;\nCell.image = img;\n\nexport default Cell;\n","import MovingObject from \"./moving_object\";\nimport Util from \"./util\";\nimport Game from \"./game.js\";\nimport Ship from \"./ship.js\";\nimport Bullet from \"./bullet.js\";\nimport Cell from \"./cell.js\";\n\nconst DEFAULTS = {\n  COLOR: \"#c90579\",\n  RADIUS: 25,\n  SPEED: 1,\n};\n\nclass Corona extends MovingObject {\n  constructor(options = {}) {\n    options.speed = options.speed || DEFAULTS.SPEED;\n    options.color = DEFAULTS.COLOR;\n    options.radius = DEFAULTS.RADIUS;\n    options.direction = options.direction || Util.randomVec();\n    options.pos = options.pos || Game.randomPos();\n    super(options);\n  }\n\n  draw(ctx) {\n    const pos = this.pos;\n    ctx.drawImage(Corona.image, pos[0] - 25, pos[1] - 25, 50, 50);\n  }\n\n  collide(other) {\n    if (other instanceof Corona) {\n      this.bounce(this, other);\n    }\n    if (other instanceof Cell) {\n      other.remove();\n    }\n    if (other instanceof Ship) {\n      other.remove();\n    }\n    if (other instanceof Bullet) {\n      this.remove();\n    }\n  }\n  bounce(obj1, obj2) {\n    const [p1, p2] = [obj1.pos, obj2.pos];\n    const [d1, d2] = [obj1.direction, obj2.direction];\n    const [s1, s2] = [obj1.speed, obj2.speed];\n\n    //calculate velocity based on direction and speed\n    // const [v1, v2] = [\n    //   [d1[0] * s1, d1[1] * s1],\n    //   [d2[0] * s2, d1[2] * s2],\n    // ];\n\n    //get vector of collision (arrow between the center of two objects)\n    const vCollision = { x: p2[0] - p1[0], y: p2[1] - p1[1] };\n\n    //calculate distance between two objects\n    const distance = Math.sqrt(\n      Math.pow(obj2.pos[0] - obj1.pos[0], 2) +\n        Math.pow(obj2.pos[1] - obj1.pos[1], 2)\n    );\n\n    //scale the vector of collision to get the collision normal / direction\n    const vCollisionNorm = {\n      x: vCollision.x / distance,\n      y: vCollision.y / distance,\n    };\n\n    //calculate relative velocity\n    const vRelativeVelocity = { x: d1[0] - d2[0], y: d1[1] - d2[1] };\n\n    //calculate speed based on relative velocity and normal vector\n    const speed =\n      vRelativeVelocity.x * vCollisionNorm.x +\n      vRelativeVelocity.y * vCollisionNorm.y;\n\n    //if objects are moving away from eachother no further change is needed\n    if (speed < 0) {\n      return;\n    }\n\n    //move objects in opposite directions\n    obj1.direction[0] -= speed * vCollisionNorm.x;\n    obj1.direction[1] -= speed * vCollisionNorm.y;\n    obj2.direction[0] += speed * vCollisionNorm.x;\n    obj2.direction[1] += speed * vCollisionNorm.y;\n  }\n}\n\nconst img = new Image();\nimg.src = \"./assets/virus.png\";\nCorona.image = img;\n\nexport default Corona;\n","import Corona from \"./corona\";\nimport Ship from \"./ship\";\nimport Bullet from \"./bullet\";\nimport Util from \"./util\";\nimport Cell from \"./cell\";\n\nclass Game {\n  constructor(coronaCount = 3, cellCount = 10, speed = 1, lives = 3, mode) {\n    this.coronas = [];\n    this.cells = [];\n    this.coronaCount = coronaCount;\n    this.cellCount = cellCount;\n    this.speed = speed;\n    this.over = false;\n    this.bullets = [];\n    this.lives = lives;\n\n    this.ship = new Ship({ game: this });\n    const time = mode === \"preview\" ? 0 : 4000;\n    setTimeout(() => {\n      this.addCoronas();\n      this.addCells();\n    }, time);\n  }\n\n  addCoronas() {\n    for (let i = 0; i < this.coronaCount; i++) {\n      const corona = new Corona({ game: this, speed: this.speed });\n      this.coronas.push(corona);\n    }\n  }\n\n  addCells() {\n    for (let i = 0; i < this.cellCount; i++) {\n      const cell = new Cell({ game: this, speed: this.speed });\n      this.cells.push(cell);\n    }\n  }\n\n  updateSpeed(speed) {\n    this.speed = speed;\n    this.coronas.forEach((corona) => {\n      corona.speed = this.speed;\n    });\n    this.cells.forEach((cell) => {\n      cell.speed = this.speed;\n    });\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n  }\n\n  static randomPos() {\n    const x = Math.floor(Math.random() * (window.innerWidth - 30)) + 15;\n    const y = Math.floor(Math.random() * (window.innerHeight - 230)) + 115;\n    return [x, y];\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight - 200);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight - 200);\n\n    var grd = ctx.createRadialGradient(600, 400, 10, 600, 400, 600);\n    var grd = ctx.createLinearGradient(0, 0, 0, window.innerHeight);\n    grd.addColorStop(0, \"#184065\");\n    // grd.addColorStop(0, \"#46bfcf\");\n    grd.addColorStop(1, \"#000000\");\n\n    ctx.fillStyle = grd;\n    ctx.fill();\n\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n    this.allObjects().forEach((el) => el.draw(ctx));\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((el) => el.move(delta));\n  }\n\n  remove(object) {\n    if (object instanceof Corona) {\n      const index = this.coronas.indexOf(object);\n      this.coronas.splice(index, 1);\n      if (!this.coronas.length) {\n        setTimeout(() => {\n          this.over = \"win\";\n          this.bullets = [];\n        }, 500);\n      }\n    } else if (object instanceof Cell) {\n      const index = this.cells.indexOf(object);\n      this.cells.splice(index, 1);\n      const corona = new Corona({\n        game: this,\n        pos: object.pos,\n        speed: this.speed,\n      });\n      this.coronas.push(corona);\n      if (!this.cells.length) {\n        this.over = \"lose\";\n        this.bullets = [];\n      }\n    } else if (object instanceof Ship) {\n      this.lives -= 1;\n      object.relocate();\n      if (this.lives === 0) this.over = \"killed\";\n    } else if (object instanceof Bullet) {\n      const index = this.bullets.indexOf(object);\n      this.bullets.splice(index, 1);\n    }\n  }\n\n  outOfBound(pos, radius) {\n    return (\n      pos[0] < 0 + radius ||\n      pos[1] < 0 + radius ||\n      pos[0] > window.innerWidth - radius ||\n      pos[1] > window.innerHeight - 200 - radius\n    );\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], window.innerWidth),\n      Util.wrap(pos[1], window.innerHeight - 200),\n    ];\n  }\n\n  allObjects() {\n    return [].concat(this.coronas, this.ship, this.bullets, this.cells);\n  }\n\n  checkCollisions() {\n    let all = this.allObjects();\n\n    for (let i = 0; i < all.length - 1; i++) {\n      for (let j = i + 1; j < all.length; j++) {\n        if (all[i].isCollidingWith(all[j])) {\n          all[i].collide(all[j]);\n        }\n      }\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  moveShip(direction) {\n    this.ship.power(direction);\n  }\n\n  fire() {\n    this.ship.fireBullet();\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1200; //window.innerWidth;\nGame.DIM_Y = 800; //window.innerHeight;\n// Game.DIM_X = window.screen.width;\n// Game.DIM_Y = window.screen.height;\nGame.FPS = 32;\n\nexport default Game;\n","import Game from \"./game\";\n\nclass GameView {\n  constructor(ctx) {\n    this.game = null;\n    this.ctx = ctx;\n    this.startGame(\"preview\");\n    this.startDialog({ intro: true });\n\n    $(\".restart\").on(\"click\", () => {\n      this.game = null;\n      $(\".dialog\").remove();\n      this.startDialog({ intro: false });\n    });\n\n    $(\".info\").on(\"click\", () => {\n      if ($(\".attribute\").length) return;\n      const $info = $(\n        \"<p class='attribute'>Game icons downloaded from www.flaticon.com</p>\"\n      );\n      $(\".iconContainer\").append($info);\n      setTimeout(() => {\n        $(\".attribute\").remove();\n      }, 3000);\n    });\n  }\n\n  startDialog(intro) {\n    const titleText = \"COVID KILLER\";\n    const instruction = $(\n      \"<p class='dialogMission'>YOU ARE A WHITE BLOOD CELL. KILL ALL THE CORONA VIRUSES BEFORE THEY INFECT THE HEALTHY CELLS!</p><p class='dialogInstructions'>MOVE: <span class='dialogInstructionsColor'>W, A, S, D </span>   &   SHOOT: <span class='dialogInstructionsColor'>SPACE</span></p>\"\n    );\n    const buttonText = \"START GAME\";\n    this.createDialog(titleText, instruction, buttonText, intro);\n  }\n\n  startGame(mode) {\n    let coronaCount = parseInt($(\"#corona\").val());\n    coronaCount = isNaN(coronaCount) ? 3 : coronaCount;\n    let cellCount = parseInt($(\"#cell\").val());\n    cellCount = isNaN(cellCount) ? 10 : cellCount;\n    const lives = 3;\n    let speed = 1;\n    let selected;\n    if (mode !== \"preview\") {\n      selected = $(\".dialog\").find(\".selected\").attr(\"id\");\n      if (selected === \"easy\") speed = 0.25;\n      else if (selected === \"hard\") speed = 3;\n      this.countdown(3);\n    } else {\n      speed = 0.001;\n    }\n\n    this.game = new Game(coronaCount, cellCount, speed, lives, mode);\n\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n\n    $(\".dialog\").remove();\n\n    if ($(\"#difficulty\").children().length) {\n      $(\"#difficulty\").children().remove();\n    }\n\n    const $buttons = this.difficultyButtons(\"game\", selected);\n    $(\"#difficulty\").append($buttons);\n\n    $(document).on(\"click\", \".diffButt-game\", (e) => {\n      $(\".diffButt-game\").removeClass(\"selected\");\n      let val = e.target.id;\n      let speed = 1;\n      if (val === \"easy\") speed = 0.25;\n      else if (val === \"hard\") speed = 3;\n\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n      this.game.updateSpeed(speed);\n    });\n\n    $(\"#stats\").removeClass(\"hidden\");\n    $(\"#difficultyContainer\").removeClass(\"hidden\");\n\n    this.updateStats();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  countdown(seconds) {\n    const $number = $(\"<h1></h1>\").addClass(\"countdown\").text(seconds);\n    $(\"body\").append($number);\n\n    const counter = setInterval(() => {\n      seconds--;\n      $number.text(seconds);\n      if (seconds <= 0) {\n        clearInterval(counter);\n        $number.text(\"KILL THE CORONA!\");\n        setTimeout(() => {\n          $number.remove();\n        }, 1000);\n      }\n    }, 1000);\n  }\n\n  step(delta) {\n    this.game.step(delta);\n    this.game.draw(this.ctx);\n  }\n\n  animate(time) {\n    const delta = time - this.lastTime;\n    this.step(delta);\n    this.lastTime = time;\n    this.updateStats();\n    if (!this.game.over) {\n      requestAnimationFrame(this.animate.bind(this));\n    } else {\n      this.gameOver();\n    }\n\n    const direction = [0, 0];\n    for (const k of Object.keys(GameView.MOVES)) {\n      const move = GameView.MOVES[k];\n      if (key.isPressed(k)) {\n        direction[0] += move[0];\n        direction[1] += move[1];\n      }\n    }\n\n    this.game.moveShip(direction);\n  }\n\n  updateStats() {\n    $(\"#lives\").text(this.game.lives);\n    $(\"#cells\").text(this.game.cells.length);\n    $(\"#coronas\").text(this.game.coronas.length);\n  }\n\n  gameOver() {\n    const titleText =\n      this.game.over === \"win\" ? \"YOU BEAT CORONA !\" : \"CORONA BEAT YOU !\";\n    const buttonText = \"PLAY AGAIN\";\n    let instructionText;\n    switch (this.game.over) {\n      case \"win\":\n        instructionText = \"YOU DESTROYED ALL THE CORONA VIRUSES! :)\";\n        break;\n      case \"lose\":\n        instructionText = \"ALL THE HEALTHY CELLS WERE INFECTED! :(\";\n        break;\n      default:\n        instructionText = \"YOU WERE KILLED BEFORE SAVING THE HEALTHY CELLS! :(\";\n    }\n    const instruction = $(\"<p></p>\").text(instructionText);\n    this.createDialog(titleText, instruction, buttonText, { intro: false });\n  }\n\n  createDialog(titleText, instruction, buttonText, { intro }) {\n    if ($(\".dialog\").length) return;\n    const $dialog = $(\"<div></div>\").addClass(\"dialog\");\n    const $title = $(\"<h1></h1>\").addClass(\"dialogTitle\").text(titleText);\n    $dialog.append($title);\n    $dialog.append(\"<br/>\");\n\n    $dialog.append(instruction);\n\n    if (!intro) {\n      const $inputs = $(\"<div></div>\").addClass(\"inputs\");\n      const $coronaDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $coronaText = $(\"<p>CORONA VIRUSES:</p>\");\n      const $coronaNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"3\" id=\"corona\"></p>'\n      );\n      $coronaDiv.append($coronaText).append($coronaNum);\n      const $cellDiv = $(\"<div></div>\").addClass(\"inputContainer\");\n      const $cellText = $(\"<p>HEALTHY CELLS:</p>\");\n      const $cellNum = $(\n        '<input type=\"number\" min=\"1\" max=\"100\" value=\"10\" id=\"cell\"></p>'\n      );\n      $cellDiv.append($cellText).append($cellNum);\n      $inputs.append($coronaDiv).append($cellDiv);\n      $dialog.append($inputs);\n    }\n    const $button = $(\"<button></button>\")\n      .addClass(\"dialogButton\")\n      .text(buttonText);\n\n    const $buttons = this.difficultyButtons(\"dialog\");\n    $dialog.append($buttons);\n\n    $(document).on(\"click\", \".diffButt-dialog\", (e) => {\n      $(\".diffButt-dialog\").removeClass(\"selected\");\n      const $target = $(event.target);\n      $target.addClass(\"selected\");\n    });\n\n    $button.on(\"click\", this.startGame.bind(this));\n    $dialog.append(\"<br/>\");\n    $dialog.append($button);\n\n    $(\"body\").append($dialog);\n  }\n\n  difficultyButtons(location, selected = \"normal\") {\n    const $container = $(\"<div></div>\").addClass(\"difficultyButtons\");\n    const $text = $(\"<p>DIFFICULTY:</p>\");\n    const $easy = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"easy\")\n      .text(\"SHELTER IN PLACE\");\n\n    const $normal = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"normal\")\n      .text(\"NORMAL\");\n    const $hard = $(\"<button></button>\")\n      .addClass(`diffButt-${location}`)\n      .attr(\"id\", \"hard\")\n      .text(\"TRUMP RALLY\");\n\n    if (selected === \"easy\") $easy.addClass(\"selected\");\n    else if (selected === \"hard\") $hard.addClass(\"selected\");\n    else $normal.addClass(\"selected\");\n\n    $container.append($text).append($easy).append($normal).append($hard);\n    return $container;\n  }\n\n  bindKeyHandlers() {\n    const game = this.game;\n    key(\"space\", function () {\n      game.fire();\n    });\n  }\n}\n\nGameView.MOVES = {\n  w: [0, -1],\n  a: [-1, 0],\n  s: [0, 1],\n  d: [1, 0],\n};\n\nexport default GameView;\n","console.log(\"Webpack is working!\");\nimport GameView from \"./game_view\";\nimport Game from \"./game\";\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.height = window.innerHeight - 200;\n  canvasEl.width = window.innerWidth;\n  const ctx = canvasEl.getContext(\"2d\");\n  const gameView = new GameView(ctx);\n\n  $(window).on(\"resize\", () => {\n    canvasEl.height = window.innerHeight - 200;\n    canvasEl.width = window.innerWidth;\n  });\n});\n"],"sourceRoot":""}